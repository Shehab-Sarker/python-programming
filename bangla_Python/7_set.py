"""পাইথনে সেট তৈরি করার জন্য আমরা {} চিহ্ন বা set() 
ফাংশন ব্যবহার করতে পারি। তবে অসুবিধার কথা হল set()
ফাংশন দিয়ে ফঁকা সেট তৈরি করা গেলেও {} চিহ্ন দিয়া ফাঁকা 
সেট তৈরি করা যায় না। এই চিহ্নটা ফাঁকা ডিকশনারি তৈরি করে।"""
A={'orange','banana','pear','apple'}
print(A)
# A=set('orange','banana','pear','apple')
# print(A)
a=set('abracadabra')
print(a)
b=set('apple')
print(b)
c=set('orange')
print(c)
print('')

#  ‘apple’ আর ‘orange’ কে 
# দুইবার করে দিলেও সেটের ভিতর তারা একবার করে আছে।
A1={'apple','orange','apple','pear','orange','banana'} 
print(A1)
A=set()
print(type(A))
print('')

# সেটের উপাদানগুলোকে ইনডেক্স নম্বর দিয়ে অ্যাক্সেস করা যায় না।
# print(A1[0])

# নতুন একটা উপাদান বা এলিমেন্ট যোগ করতে পারি। এজন্য আমাদেরকে add() ফাংশন ব্যবহার করতে হবে।
A1.add("pineapple")
print(A1)
# একই সাথে কয়েকটা উপাদান যোগ করতে চাই তখন কিন্তু add() ফাংশন দিয়ে কাজ হবে না। তখন আমাদের update() ফাংশন ব্যবহার করতে হবে।
A1.update({'berry','grape'})
print(A1)
# A সেট থেকে আমরা একটা এলিমেন্টকে খাইয়া দিতে চাই মানে রিমুভ করতে চাই। সেক্ষেত্রে আমাদেরকে remove()and discard() ফাংশনটা ব্যবহার করতে হবে।
A1.remove('apple')
print(A1)
print('')

# pop() ফাংশনটা ব্যবহার করব। এই ফাংশন একটা সেটের প্রথম উপাদানটা রিমুভ করে দেয় আর তারপর সেটাকে রিটার্ন করে
x= {'apple', 'orange', 'apple', 'pear', 'orange', 'banana'}
print(x)
x.pop()
print(x)
#  A সেটের সব এলিমেন্টকে একটা স্টেটমেন্ট দিয়াই খাইয়া দিতে চাই? তখন কি করব? তখন আমরা clear() ফাংশনটা ব্যবহার করব
x.clear()
print(x)
print('')

# দুইটা সেটের ইউনিয়ন করা মানে এমন একটা নতুন সেট গঠন করা যেখানে দুই সেটের উপাদানগুলোই থাকবে।
# A = {1, 2, 3, 4, 5} ও B = {6, 7, 8} দুইটা সেট হলে, তাদের ইউনিয়ন সেট C = {1, 2, 3, 4, 5, 6, 7, 8}।
# এই একই কাজ পাইথন দিয়ে করতে হলে আমাদের ব্যবহার করতে হবে union() ফাংশন
s={1,2,3,4,5}
t={6,7,8}
print(s.union(t))

#  A = {1, 2, 3, 4, 5} ও B = {2, 3, 4, 5, 6, 7} দুইটা সেট হলে, তাদের ইন্টারসেকশন সেট C = {2, 3, 4, 5}।
# এই একই কাজ পাইথন দিয়ে করতে হলে আমাদের ব্যবহার করতে হবে intersection() ফাংশন
w={1,2,3,4,5}
t={2,3,4,5,6,7}
print(w.intersection(t))

# A - B বের করব। এইক্ষেত্রে নতুন যে সেটটা তৈরি হবে সেখানে B সেটের কোন উপাদান থাকতে পারবে না।
# আবার B - A এর ক্ষেত্রে A সেটের কোন উপাদান থাকতে পারবে না। পাইথন দিয়ে A - B বের করতে গেলে 
# difference() ফাংশন ব্যবহার করতে হবে আমাদের
r={5,6,7,8,9}
print(t.difference(r))
